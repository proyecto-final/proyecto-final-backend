

openapi: 3.0.0
info:
  title: Sherlock Correlation Module API
  description: Sherlock correlation module interface
  version: 0.1.9
servers:
  - url: http://localhost:3032/
    description: development server
  - url: http://localhost:3032/
    description: Testing server

components:
  parameters:
    offsetParam:
      name: offset
      in: query
      description: offset of the list
      schema:
        type: integer
        default: 0
      required: false
    limitParam:
      name: limit
      in: query
      description: amount of items to be returned
      required: false
      schema:
        type: integer
        default: 10
  schemas:
    LogRequest:
      type: object
      properties:
        title: 
          type: string
          description: Log title
        description:
          type: string
          description: Log description
    Message:
      type: object
      properties:
        msg: 
          type: string
          description: message
      example:
        msg: OK
    LogHeader:
      type: object
      properties:
        _id:
          type: string
          description: Log ID
        title:
          type: string
          description: Log title
        description:
          type: string
          description: Log description
        projectId:
          type: string
          description: ID of the project
        status:
          type: string
          description: status of the log
          enum: 
          - processing
          - processed
        differentEvents:
          type: array
          description: list of different events
          items:
            type: string
            description: event ID
      example:
        _id: 62d776f235ca54db99e4765e
        title: pepe.txt
        description: "This is a log file"
        projectId: 123456789
        status: "processing"
        differentEvents:
          - "123456789"
          - "987654321"
    VulnerabilityResponse:
      type: object
      properties:
        _id:
          type: string
          description: Vulnerability ID
        name:
          type: string
          description: Vulnerability name
        references:
          type: string
          description: vulnerability references
        projectId:
          type: string
          description: ID of the project
        level:
          type: string
          description: vulnerability level
          enum: 
          - high
          - medium
          - low
      example:
        _id: 62ee8f56647000687263cf76
        references: ["https://car.mitre.org/wiki/CAR-2016-04-005"]
        level: low
        name: Admin User Remote Logon
    VulnerabilityRequest:
      type: object
      properties:
        name:
          type: string
          description: Vulnerability name
        references:
          type: string
          description: vulnerability references
        level:
          type: string
          description: vulnerability level
          enum: 
          - high
          - medium
          - low
      example:
        _id: 62ee8f56647000687263cf76
        references: ["https://car.mitre.org/wiki/CAR-2016-04-005"]
        level: low
        name: Admin User Remote Logon
    Count:
      type: number
      description: Number of results in the database
      example: 10
    LineUpdateRequest:
      type: object
      properties:
        notes:
          type: array
          description: line notes
        vulnerabilites:
          type: array
          description: line vulnerabilites
      example:
        notes:
          - This is a note
          - This is another note
        vulnerabilites:
          - _id: 62ee8f56647000687263cf76
          - _id: 62ee8f56647000687263cf76
    Ip:
      type: object
      properties:
        _id:
          type: string
          description: Log ID
        raw:
          type: string
          description: IP raw value
        reputation:
          type: string
          description: IP reputation
        reports:
          type: array
          description: IP reports
        isTor:
          type: boolean
          description: is TOR
        totalReports:
          type: number
          description: number of reports
        country:
          type: string
          description: ip country
        city:
          type: string
          description: ip city
        ASN:
          type: string
          description: IP ASN
        ISP:
          type: string
          description: IP ISP
        VPN:
          type: boolean
          description: is VPN
        lastReportedAt:
          type: string
          description: status of the log
      example:
        _id: 62d776f235ca54db99e4765e
        reputation: 0
        lastReportedAt: 2020-01-01T00:00:00.000Z
        reports:
        - reportedAt: "2022-08-24T01:06:19+00:00"
          comment: "SS5: Brutforce ssh Login"
          categories:
            - "Brutforce"
            - "SSH"
        projectId: 123456789
        status: "processing"
        isTor: true
        country: "US"
        totalReports: 10
        city: "New York"
        ASN: "ASN1"
        ISP: "ISP1"
        VPN: true
    Line:
      type: object
      properties:
        _id:
          type: string
          description: Log ID
        log:
          type: string
          description: Log ID
        vulnerabilities:
          type: array
          description: Vulnerability detected
        detail:
          type: object
          description: Additional line informaiton
        raw:
          type: string
          description: string version of line
        timestamp:
          type: string
          description: time of line event
        notes:
          type: array
          description: user added notes
        ip:
          $ref: '#/components/schemas/Ip'
      example:
        _id: 62d776f235ca54db99e4765e
        log: 62e5ae6f36a29d448fc6bf0f
        vulnerabilites:
          - name: RDP Login from Localhost
            references:
              - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html
              - https://www.fireeye.com/blog/threat-research/2019/01/bypassing-network-restrictions-through-rdp-tunneling.html
        detail:
          computer: PC01.example.corp

        raw: 2019-02-13T18:04:58.363696Z - 4624 - Security
        timestamp: 2019-02-13T18:04:58.363696Z
        notes:
          - This is a note
          - This is another note
        ip:
          _id: 62d776f235ca54db99e4765e
          reputation: 0
          lastReportedAt: 2020-01-01T00:00:00.000Z
          reports:
          - reportedAt: "2022-08-24T01:06:19+00:00"
            comment: "SS5: Brutforce ssh Login"
            categories:
              - "Brutforce"
              - "SSH"
          projectId: 123456789
          status: "processing"
          isTor: true
          country: "US"
          totalReports: 10
          city: "New York"
          ASN: "ASN1"
          ISP: "ISP1"
          VPN: true

tags:
  - name: Logs CRUD
    description: logs creation, modification and remove
  - name: Lines CRUD
    description: lines creation, modification and remove
  - name: Vulnerability CRUD
    description: vulnerability creation and visualization

paths:
  /api/project/{projectId}/correlate/log:
    post:
      summary: Creates an array of logs
      tags: [Logs CRUD]
      description: Creates an array of logs
      requestBody:
        content: 
          multipart/form-data:
            schema:
              type: object
              properties:
                files:
                  type: array
                  description: Logs to be correlated
                  items:
                    type: string
                metadata:
                  description: Metadata to be correlated, is an array of LogRequest as STRING
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/LogHeader'
    get:
      summary: Get logs
      tags: [Logs CRUD]
      parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: title
        in: query
        description: title of the log
        required: false
        schema:
          type: string
          default: ""
      - name: status
        in: query
        description: used to filter organizations by enabled status
        schema:
          type: string
          default: ""
          enum:
          - processing
          - processed
        required: false
      responses:
        200:
          description: Logs page
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/Count'
                  rows:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/LogHeader'
  /api/project/{projectId}/correlate/log/{logId}/markAsSelected:
    post:
      summary: Marks some log lines as selected
      tags: [Logs CRUD]
      requestBody:
        content: 
          application/json:
            schema:
              type: object
              properties:
                lineIds:
                  type: array
                  description: Log lines to be marked as selected
                  items:
                    type: string
      responses:
        '200':
          description: Generic msg
          content:
            application/json:
              schema: 
                type: object
                properties:
                  msg:
                    type: string
                    description: Message
  /api/project/:projectId/correlate/log/:logId/line/:lineId:
    patch:
      summary: Update lines
      tags: [Lines CRUD]
      parameters:
      - name: project id
        in: path
        description: project id
        required: true
        schema:
          type: string
      - name: log id
        in: path
        description: log id (mongo)
        required: true
        schema:
          type: string
      - name: line id
        in: path
        description: line id (mongo)
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineUpdateRequest'
      responses:
        200:
          description: Lines page
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Line'
  /api/project/{projectId}/correlate/log/{logId}:
    get:
      summary: Gets a log
      tags: [Logs CRUD]
      description: Gets a log
      parameters:
      - name: projectId
        in: path
        description: "Project ID"
        required: true
        schema:
          type: integer
      - name: logId
        in: path
        description: "Log ID"
        required: true
        schema:
          type: string
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/LogHeader'
    patch:
      summary: Edits a log
      tags: [Logs CRUD]
      description: Edits a log
      parameters:
      - name: projectId
        in: path
        description: "Project ID"
        required: true
        schema:
          type: integer
      - name: logId
        in: path
        description: "Log ID"
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LogRequest'
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                $ref: '#/components/schemas/LogHeader'
    delete:
      summary: Delete especific log
      tags: [Logs CRUD]
      description: Delete especific log
      parameters:
      - name: projectId
        in: path
        description: "Project ID"
        required: true
        schema:
          type: integer
      - name: logId
        in: path
        description: "Log ID"
        required: true
        schema:
          type: string
      responses:
        '200':
          description: Messege acknowling it works
          content:
            application/json:
              schema: 
                type: object
                $ref: '#/components/schemas/Message'
  /api/project/{projectId}/correlate/log/{logId}/line:
    get:
      summary: Get lines
      tags: [Lines CRUD]
      parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: raw
        in: query
        description: line text
        required: false
        schema:
          type: string
          default: ""
      - name: dateFrom
        in: query
        description: line date from
        required: false
        schema:
          type: string
          default: ""
      - name: dateTo
        in: query
        description: line date to
        required: false
        schema:
          type: string
          default: ""
      - name: events
        in: query
        description: "event ids separated by COMMA! like: \"1,2,3\"" 
        required: false
        schema:
          type: string
          default: ""
      responses:
        200:
          description: Lines page
          content:
            application/json:
              schema:
                type: object
                properties:
                  count:
                    $ref: '#/components/schemas/Count'
                  rows:
                    type: array
                    items:
                      allOf:
                        - $ref: '#/components/schemas/Line'
  /api/project/{projectId}/correlate/log/{logId}/line/{lineId}:
    patch:
      summary: Update lines
      tags: [Lines CRUD]
      parameters:
      - name: project id
        in: path
        description: project id
        required: true
        schema:
          type: string
      - name: log id
        in: path
        description: log id (mongo)
        required: true
        schema:
          type: string
      - name: line id
        in: path
        description: line id (mongo)
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LineUpdateRequest'
      responses:
        200:
          description: Lines page
          content:
            application/json:
              schema: 
               $ref: '#/components/schemas/Line'
  /api/project/{projectId}/correlate/vulnerability:
    post:
      summary: Creates an array of logs
      tags: [Vulnerability CRUD]
      parameters:
      - name: projectId
        in: path
        description: "Project ID"
        required: true
        schema:
          type: integer
      description: Creates an array of logs
      requestBody:
        content: 
         application/json:
            schema:
              type: object
              $ref: '#/components/schemas/VulnerabilityRequest'
      responses:
        '200':
          description: A JSON array of user names
          content:
            application/json:
              schema: 
                type: array
                items:
                  $ref: '#/components/schemas/VulnerabilityResponse'
    get:
      summary: Get vulnerabilities
      tags: [Vulnerability CRUD]
      parameters:
      - $ref: '#/components/parameters/offsetParam'
      - $ref: '#/components/parameters/limitParam'
      - name: projectId
        in: path
        description: "Project ID"
        required: true
        schema:
          type: integer
      - name: name
        in: query
        description: vulnerability name
        required: false
        schema:
          type: string
          default: ""
      - name: level
        in: query
        description: vulnerability level
        schema:
          type: string
          default: ""
          enum:
          - high
          - low
          - medium
        required: false
      responses:
        200:
          description: Vulnerabilities page
          content:
            application/json:
              schema:
                properties:
                  count:
                    $ref: '#/components/schemas/Count'
                  rows:
                    type: array
                    items:
                      allOf:
                      - $ref: '#/components/schemas/VulnerabilityResponse'

